from pyrogram import Client, filters
from config import tg_api_id, tg_api_hash, AUTOREPLY_MESSAGE, last_reply_times, REPLY_INTERVAL
from function import with_reply, user_choise, meta_response, g4f_response, gemini_response
import logging

# –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –∫–ª–∏–µ–Ω—Ç–∞
app = Client("mybot", api_id=tg_api_id, api_hash=tg_api_hash)

logging.basicConfig(level=logging.INFO, format='%(asctime)s - %(levelname)s - %(message)s')

# –°–ø–∏—Å–æ–∫ user_id, –∫–æ—Ç–æ—Ä—ã–µ –Ω—É–∂–Ω–æ —Ñ–∏–ª—å—Ç—Ä–æ–≤–∞—Ç—å
allowed_user_ids = [906893530, 1008114300, 5547028370, 6690844057]  # –ó–∞–º–µ–Ω–∏—Ç–µ –Ω–∞ —Å–≤–æ–∏ chat.id


# –°–æ–∑–¥–∞–µ–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å—Å–∫–∏–π —Ñ–∏–ª—å—Ç—Ä
@filters.create
def chat_filter(_, __, message):
    return message.from_user.id in allowed_user_ids


@app.on_message(filters.command("–≥–ø—Ç", prefixes="."))
async def gpt_handler(_, message):
    user_id = message.from_user.id
    req_text = message.text.split(".–≥–ø—Ç ", maxsplit=1)[1]
    if len(message.text.split(' ')) <= 1:
        return await message.reply_text('–£–∫–∞–∂–∏—Ç–µ –∑–∞–ø—Ä–æ—Å', quote=True)
    msg = await message.reply('–ì–µ–Ω–µ—Ä–∞—Ü–∏—è...')
    await message.reply(g4f_response(req_text), quote=True)
    await app.delete_messages(msg.chat.id, msg.id)


# üì• –ß—Ç–µ–Ω–∏–µ –≤—Ö–æ–¥—è—â–∏—Ö —Å–æ–æ–±—â–µ–Ω–∏–π –±–µ–∑ –æ—Ç–º–µ—Ç–∫–∏ "–ø—Ä–æ—á–∏—Ç–∞–Ω–æ"
@app.on_message(filters.private & ~filters.me)
def message_handler(client, message):
    try:
        username = message.from_user.username if message.from_user.username else '–ù–µ–∏–∑–≤–µ—Å—Ç–Ω—ã–π –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å'
        message_text = message.text if message.text else '[–ù–µ—Ç —Ç–µ–∫—Å—Ç–∞]'
        print(f'–ù–æ–≤–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ –æ—Ç {username}: {message_text}')
        text = message.text.lower()

        # üìã –°–æ—Ö—Ä–∞–Ω—è–µ–º –ª–æ–≥ –≤—Å–µ—Ö —Å–æ–æ–±—â–µ–Ω–∏–π –≤ —Ñ–∞–π–ª
        with open('userbot_log.txt', 'a', encoding='utf-8') as f:
            f.write(f'{username}: {message_text}\n')

        # üìú –û–±—Ä–∞–±–æ—Ç–∫–∞ –∫–æ–º–∞–Ω–¥ /start, /help –∏ /stop
        if message.text.startswith('/start'):
            message.reply_text('üëã –ü—Ä–∏–≤–µ—Ç! –¢—É—Ç–∞')
       
        # ü§ñ –ê–≤—Ç–æ–æ—Ç–≤–µ—Ç—á–∏–∫ –Ω–∞ –æ–±—ã—á–Ω—ã–µ —Å–æ–æ–±—â–µ–Ω–∏—è (–µ—Å–ª–∏ —ç—Ç–æ –Ω–µ –∫–æ–º–∞–Ω–¥–∞)
        else:
            # –ü—Ä–∏–º–µ—Ä –ª–æ–≥–∏–∫–∏ –∞–≤—Ç–æ–æ—Ç–≤–µ—Ç—á–∏–∫–∞
            if '–ø—Ä–∏–≤–µ—Ç' in text:
                message.reply_text('–ü—Ä–∏–≤–µ—Ç! –ö–∞–∫ –¥–µ–ª–∞? üòä')
            elif '–∫–∞–∫ –¥–µ–ª–∞' in text:
                message.reply_text('–£ –º–µ–Ω—è –≤—Å—ë –æ—Ç–ª–∏—á–Ω–æ! –ê —É –≤–∞—Å?')
            elif '—Å–∞–ª–æ–º' in text:
                message.reply_text('–°–∞–ª–æ–º –∞–ª–µ–π–∫—É–º')
            elif '–¥—É—Ä—É—Å—Ç–º–∏' in text:
                message.reply_text('–ù–∞–≥–∑ –†–∞—Ö–º–∞—Ç')

    except Exception as e:
        print(f'‚ùå –ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞: {e}')



print('starting')
# –ó–∞–ø—É—Å–∫ –æ–±—Ä–∞–±–æ—Ç–∫–∏ —Å–æ–æ–±—â–µ–Ω–∏–π
app.run()
