from pyrogram import Client, filters 
from gtts import gTTS 
# from db import Database
import tgcrypto, logging, time

api_id = 24073458
api_hash = "717a1a4a14165bd46f9e066ee639a63f"

app = Client("my_app", api_id=api_id, api_hash=api_hash)
chat_id = [906893530]
muts = []

logging.basicConfig(level=logging.INFO)


# @app.on_message(filters.command("–º—É—Ç", prefixes=""))
# async def mute(client, message):
#   if message.chat.id != chat_id:
#     return
#   repl = message.reply_to_message
#   if repl is None:
#     return await message.reply_text("–ö–æ–≥–æ?")
    
#   member = await app.get_chat_member(chat_id=message.chat.id, user_id=repl.from_user.id)
#   if member.status == member.status.OWNER or member.status == member.status.ADMINISTRATOR:
#     return await message.reply_text("–æ–Ω –∞–¥–º–∏–Ω. –µ–≥–æ –Ω–µ–ª—å–∑—è –∑–∞–º—É—Ç–∏—Ç—å")
  
#   member = await app.get_chat_member(chat_id=message.chat.id, user_id=message.from_user.id)
#   if member.status != member.status.OWNER and member.status != member.status.ADMINISTRATOR:
   
#     return await message.reply_text("—Ç—ã –Ω–µ –∞–¥–º–∏–Ω")
   
#   if repl.from_user.id in muts:
#     return await message.reply_text("–æ–Ω –∏ —Ç–∞–∫ –≤ –º—É—Ç–µ")
   
#   muts.append(repl.from_user.id)
#   await message.reply_text(f"–ß–µ–ª {repl.from_user.first_name} –∑–∞–º—É—á–µ–Ω")


# @app.on_message(filters.command("—Ä–∞–∑–º—É—Ç", prefixes=""))
# async def mute(client, message):
#   if message.chat.id != chat_id:
#     return
#   repl = message.reply_to_message
#   if repl is None:
#     return await message.reply_text("–ö–æ–≥–æ?")
  
#   member = await app.get_chat_member(chat_id=message.chat.id, user_id=repl.from_user.id)
#   if member.status == member.status.OWNER or member.status == member.status.ADMINISTRATOR:
#     return
  
#   member = await app.get_chat_member(chat_id=message.chat.id, user_id=message.from_user.id)
#   if member.status != member.status.OWNER and member.status != member.status.ADMINISTRATOR:
#     return
  
#   if repl.from_user.id not in muts:
#     return await message.reply_text("–æ–Ω –Ω–µ –∑–∞–º—É—á–µ–Ω")
   
#   muts.remove(repl.from_user.id)
#   await message.reply_text(f"–ß–µ–ª {repl.from_user.first_name} —Ä–∞–∑–º—É—á–µ–Ω")



  
# last_mes = {}
  
  
@app.on_message(lambda _, message: message.chat.id == chat_id)
async def shalash_chat(client, message):
  user_id = message.from_user.id 
  name = f"{message.from_user.first_name}"
  username = message.from_user.username 
  # await db.new_user(user_id, name, username)
#   if user_id not in last_mes:
#     last_mes[user_id] = 0
  
#   if time.time() - last_mes[user_id] <= 0.6:
#     last_mes[user_id] = time.time()
#     return await message.delete()
#   last_mes[user_id] = time.time()
  
#   if message.from_user.id in muts:
#     return await message.delete()
    
#   await db.plus_mes(user_id)
  text = message.text.lower() 
#   count = 20
#   if text.split()[0] in ["—Ç–æ–ø", "—Å—Ç–∞—Ç–∞"]:
#     try: count = int(text.split()[1])
#     except IndexError: pass
#     except: await message.reply_text("—Ü–∏—Ñ—Ä–æ–π —É–∫–∞–∂–∏  –¥–æ —Å–∫–æ–ª—å–∫–∏ —Ç–æ–ø")
#     if count not in range(1, 101):
#       return await message.reply_text("–ü—Ä–µ–¥–µ–ª —Ç–æ–ø–∞ —Å–æ–æ–±—â–µ–Ω–∏–π: 1-100")
    
#     top = await db.get_top_messages(count)
    
#     text_top = f"–¢–æ–ø {count if count else 20} –æ–±—â–∏—Ç–µ–ª—å–Ω—ã—Ö –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π:\n\n"
#     c = 0
#     for name, username, msgs in top:
#       c += 1
#       user = f"<a href='https://t.me/{username}'>{name}</a>"
#       text_top += f"{c}. {user} - {msgs}\n"
    
#     await message.reply_text(text_top, disable_web_page_preview=True)
    
#   if text == "/start":
#     return await message.reply_text("–ù–∞ –º–µ—Å—Ç–µüë∫")
    
#   elif text in ["/rules", "–ø—Ä–∞–≤–∏–ª–∞", "–ø—Ä–∞–≤–∏–ª–∞ —á–∞—Ç–∞"]:
#     return await message.reply_text("""üí¨–ö–æ–º–º–µ–Ω—Ç–∞—Ä–∏–∏ –¥–ª—è @eledayüëà

# üí¨–ü—Ä–∞–≤–∏–ª–∞:

# - –±–µ–∑ üóë–ø–æ–ª–∏—Ç–∏–∫–∏ –∏ üïã—Ä–µ–ª–∏–≥–∏–∏
# - –±–µ–∑ ‚ùå–º–∞—Ç–∞ (–ø–æ –≤–æ–∑–º–æ–∂–Ω–æ—Å—Ç–∏)

# - ‚úç–±–µ–∑ –æ—Å–∫–æ—Ä–±–ª–µ–Ω–∏–π

# - üí¨–±–µ–∑ —Å–ø–∞–º–∞

# - üë¶–±–µ–∑ –∫–æ–Ω—Ç–µ–Ω—Ç–∞ "–¥–ª—è üç°–≤–∑—Ä–æ—Å–ª—ã—Ö"

# üí¨- –µ—Å–ª–∏ –Ω—É–∂–µ–Ω üñê–æ–ø—Ä–µ–¥–µ–ª—ë–Ω–Ω—ã–π —á–µ–ª–æ–≤–µ–∫, –º–æ–∂–Ω–æ –æ—Ç–º–µ—Ç–∏—Ç—å –µ–≥–æ ‚úèÔ∏è—Å –ø–æ–º–æ—â—å—é @

# üí¨–ü–æ –≤—Å–µ–º –≤–æ–ø—Ä–æ—Å–∞–º: @eleday_me""")

 
  if text == "–±–æ—Ç":
    return await message.reply_text("–°–∞–º –±–æ—Ç. ")
  
  
app.run()